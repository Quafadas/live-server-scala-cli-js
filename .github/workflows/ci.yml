name: Continuous Integration

on:
  pull_request:
    branches: ['**', '!update/**', '!pr/**']
  push:
    branches: ['**', '!update/**', '!pr/**']
    tags: [v*]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


concurrency:
  group: ${{ github.workflow }} @ ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [3]
        java: [temurin@17]
        project: [jvm]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    steps:
      - uses: taiki-e/install-action@just
      - uses: coursier/setup-action@main
        with:
          jvm: temurin@17
          apps: mill scala-cli
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Playwright dependencies
        id: cache-pw
        uses: actions/cache@v2
        with:
          path: /home/runner/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('playwrightVersion.sc') }}
          restore-keys: |
            playwright-${{ runner.os }}-${{ hashFiles('playwrightVersion.sc') }}

      - name: formatCheck
        run: mill mill.scalalib.scalafmt.ScalafmtModule/checkFormatAll __.sources

      - name: Install Playwright
        run: just setupPlaywright

      - name: compile
        run: mill __.compile

      - name: Test
        run: mill __.test

  publish:
    if: github.repository == 'Quafadas/live-server-scala-cli-js' && contains(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: coursier/setup-action@main
        with:
          jvm: temurin@17
          apps: mill scala-cli

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.PGP_SECRET }}
          passphrase: ${{ secrets.PUBLISH_SECRET_KEY_PASSWORD }}
          git_config_global: true

      - name: Prepare GPG
        run: |
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          gpgconf --reload gpg-agent

      - name: List keys
        run: gpg -K

      - name: Publish to Maven Central
        run: mill -i mill.scalalib.PublishModule/publishAll project.publishArtifacts --sonatypeUri https://s01.oss.sonatype.org/service/local --sonatypeCreds "${{ secrets.PUBLISH_USER }}:${{ secrets.PUBLISH_PASSWORD }}" --gpgArgs "--passphrase=${{secrets.PUBLISH_SECRET_KEY_PASSWORD}},--no-tty,--pinentry-mode,loopback,--batch,--yes,-a,-b" --readTimeout 600000 --awaitTimeout 600000 --release true --signed true

  site:
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: coursier/setup-action@main
        with:
          jvm: temurin@17
          apps: mill scala-cli
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - run: mill site.publishDocs
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - uses: actions/upload-artifact@v3
        with:
          name: page
          path: out/site/publishDocs.dest
          if-no-files-found: error

  deploy:
    needs: site
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: page
        path: .
    - uses: actions/configure-pages@v4
    - uses: actions/upload-pages-artifact@v2
      with:
        path: .
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v3